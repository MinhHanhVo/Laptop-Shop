// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.MediumText
  expiresAt DateTime
}

model User {
  id          Int     @id @default(autoincrement())
  username    String  @unique @db.VarChar(255)
  password    String  @db.VarChar(255)
  fullName    String? @db.VarChar(255)
  address     String? @db.VarChar(255)
  phone       String? @db.VarChar(20)
  accountType String  @db.VarChar(50)
  avatar      String? @db.VarChar(255)
  role        Role    @relation(fields: [roleId], references: [id])
  roleId      Int
  cart        Cart?
  order       Order[]

  @@map("users")
}

model Role {
  id          Int    @id @default(autoincrement())
  name        String @unique @db.VarChar(100)
  description String @db.VarChar(255)

  users User[]

  @@map("roles")
}

model Order {
  id              Int    @id @default(autoincrement())
  totalPrice      Int
  receiverAddress String @db.VarChar(255)
  receiverName    String @db.VarChar(255)
  receiverPhone   String @db.VarChar(255)
  status          String @default("PENDING") //pending, cancled, complete

  paymentMethod String //COD, BANKING,...
  paymentStatus String //PAYMENT_UNPAID, SUCCED, FAILED
  paymentRef    String?

  User   User @relation(fields: [userId], references: [id])
  userId Int

  orderDetails OderDetail[]

  @@map("orders")
}

model OderDetail {
  id       Int @id @default(autoincrement())
  price    Int
  quantity Int

  Order     Order?  @relation(fields: [orderId], references: [id])
  orderId   Int?
  Product   Product @relation(fields: [productId], references: [id])
  productId Int

  @@map("order_detail")
}

model Product {
  id           Int          @id @default(autoincrement())
  name         String       @db.VarChar(255)
  price        Int
  detailDesc   String       @db.Text
  shortDesc    String       @db.VarChar(255)
  quantity     Int
  sold         Int?         @default(0)
  factory      String       @db.VarChar(255)
  target       String       @db.VarChar(255)
  image        String?      @db.VarChar(255)
  cartDetails  CartDetail[]
  orderDetails OderDetail[]

  @@map("products")
}

model Cart {
  id  Int @id @default(autoincrement())
  sum Int

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  cardDetails CartDetail[]

  @@map("carts")
}

model CartDetail {
  id       Int @id @default(autoincrement())
  quantity Int
  price    Int

  Cart      Cart?    @relation(fields: [cartId], references: [id])
  cartId    Int?
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?

  @@map("cart_detail")
}
